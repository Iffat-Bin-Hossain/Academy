version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: academy_db
    environment:
      POSTGRES_DB: academydb
      POSTGRES_USER: academyuser
      POSTGRES_PASSWORD: academy123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - academy_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U academyuser -d academydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: academy_backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/academydb
      - SPRING_DATASOURCE_USERNAME=academyuser
      - SPRING_DATASOURCE_PASSWORD=academy123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SERVER_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - academy_network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: academy_frontend
    environment:
      - REACT_APP_BACKEND_URL=http://backend:8080
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - academy_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  academy_network:
    driver: bridge
